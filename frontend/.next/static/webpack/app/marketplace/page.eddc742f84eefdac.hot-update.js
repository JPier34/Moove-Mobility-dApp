"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/marketplace/page",{

/***/ "(app-pages-browser)/./hooks/useLocationAndCity.ts":
/*!*************************************!*\
  !*** ./hooks/useLocationAndCity.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLocationAndCity: function() { return /* binding */ useLocationAndCity; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_vehicleGeoLocation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/vehicleGeoLocation */ \"(app-pages-browser)/./utils/vehicleGeoLocation.ts\");\n// hooks/useLocationAndCity.ts - Fixed to match marketplace expectations\n\n\nfunction useLocationAndCity() {\n    const [locationState, setLocationState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        currentCity: null,\n        isLoading: true,\n        error: null,\n        canRent: false,\n        nearbyVehicles: [],\n        location: null,\n        showLocationModal: false,\n        locationMethod: \"none\"\n    });\n    const geoSystem = new _utils_vehicleGeoLocation__WEBPACK_IMPORTED_MODULE_1__.VehicleGeolocationSystem();\n    const refreshLocation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setLocationState((prev)=>({\n                ...prev,\n                isLoading: true,\n                error: null,\n                showLocationModal: false\n            }));\n        try {\n            // Use the new getCurrentLocationState method\n            const locationStateResult = await geoSystem.getCurrentLocationState();\n            // Get fresh coordinates for location field\n            let coordinates = null;\n            try {\n                const freshLocation = await geoSystem.getCurrentLocation();\n                coordinates = freshLocation;\n            } catch (coordError) {\n                var _locationStateResult_currentCity;\n                // If coordinates fail, try to use city coordinates as fallback\n                if ((_locationStateResult_currentCity = locationStateResult.currentCity) === null || _locationStateResult_currentCity === void 0 ? void 0 : _locationStateResult_currentCity.coordinates) {\n                    coordinates = locationStateResult.currentCity.coordinates;\n                }\n            }\n            // Determine location method based on the result\n            let locationMethod = \"none\";\n            if (locationStateResult.method === \"gps\") {\n                locationMethod = locationStateResult.error ? \"manual\" : \"gps\"; // Manual if fallback was used\n            } else if (locationStateResult.method === \"manual\") {\n                locationMethod = \"manual\";\n            }\n            setLocationState((prev)=>({\n                    ...prev,\n                    currentCity: locationStateResult.currentCity,\n                    isLoading: false,\n                    error: locationStateResult.error,\n                    canRent: locationStateResult.canRent,\n                    location: coordinates,\n                    locationMethod: locationMethod,\n                    showLocationModal: false\n                }));\n            // Development fallback\n            if ( true && !locationStateResult.canRent && locationStateResult.error) {\n                console.log(\"\\uD83C\\uDFD7️ Development mode: Auto-setting Rome as test location...\");\n                try {\n                    const testState = await geoSystem.setTestLocation(\"rome\");\n                    setLocationState((prev)=>{\n                        var _testState_currentCity;\n                        return {\n                            ...prev,\n                            currentCity: testState.currentCity,\n                            isLoading: false,\n                            error: \"Dev mode: Using \".concat((_testState_currentCity = testState.currentCity) === null || _testState_currentCity === void 0 ? void 0 : _testState_currentCity.name, \". Original error: \").concat(locationStateResult.error),\n                            canRent: testState.canRent,\n                            locationMethod: \"manual\",\n                            showLocationModal: false\n                        };\n                    });\n                } catch (testError) {\n                    console.error(\"Test location failed:\", testError);\n                }\n            }\n        } catch (error) {\n            setLocationState((prev)=>({\n                    ...prev,\n                    isLoading: false,\n                    error: error.message || \"Location access failed\",\n                    canRent: false,\n                    showLocationModal: true,\n                    locationMethod: \"none\"\n                }));\n        }\n    }, []);\n    const setTestLocation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (cityId)=>{\n        setLocationState((prev)=>({\n                ...prev,\n                isLoading: true,\n                error: null\n            }));\n        try {\n            var _testState_currentCity;\n            const testState = await geoSystem.setTestLocation(cityId);\n            // Get city coordinates\n            const cityCoordinates = ((_testState_currentCity = testState.currentCity) === null || _testState_currentCity === void 0 ? void 0 : _testState_currentCity.coordinates) || null;\n            setLocationState((prev)=>({\n                    ...prev,\n                    currentCity: testState.currentCity,\n                    isLoading: false,\n                    error: null,\n                    canRent: testState.canRent,\n                    location: cityCoordinates,\n                    locationMethod: \"manual\",\n                    showLocationModal: false\n                }));\n            console.log(\"\\uD83E\\uDDEA Test location set: \".concat(cityId));\n        } catch (error) {\n            setLocationState((prev)=>({\n                    ...prev,\n                    isLoading: false,\n                    error: error.message,\n                    locationMethod: \"none\"\n                }));\n        }\n    }, []);\n    const clearLocation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        geoSystem.clearLocationCache();\n        setLocationState({\n            currentCity: null,\n            isLoading: false,\n            error: null,\n            canRent: false,\n            nearbyVehicles: [],\n            location: null,\n            showLocationModal: false,\n            locationMethod: \"none\"\n        });\n        console.log(\"\\uD83D\\uDDD1️ Location cleared\");\n    }, []);\n    // Initialize on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let mounted = true;\n        const initialize = async ()=>{\n            if (!mounted) return;\n            await refreshLocation();\n        };\n        initialize();\n        return ()=>{\n            mounted = false;\n        };\n    }, [\n        refreshLocation\n    ]);\n    // Return extended state with both location and coordinates (same value)\n    return {\n        ...locationState,\n        coordinates: locationState.location,\n        refreshLocation,\n        setTestLocation,\n        clearLocation\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useLocationAndCity.ts\n"));

/***/ })

});